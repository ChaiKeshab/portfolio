---
import { Icon } from "astro-icon/components";
import background from "../assets/background.svg";

const sections = [
  { name: "About", link: "/#about" },
  { name: "Experience", link: "/#experience" },
  { name: "Work", link: "/#work" },
  { name: "Contact", link: "/#contact" },
];
---

<style>
  .hex-logo {
    width: 59px;
    height: 59px;
    cursor: pointer;
    display: block;
  }

  .hex {
    stroke-width: 8;
  }

  .letter {
    font-size: 90px;
    text-anchor: middle;
    dominant-baseline: middle;
    transform-origin: center;
  }

  .show-menu {
    --tw-translate-x: 0;
    translate: var(--tw-translate-x) var(--tw-translate-y);
    visibility: visible;
  }
  .hide-menu {
    --tw-translate-x: 100%;
    translate: var(--tw-translate-x) var(--tw-translate-y);
    visibility: hidden;
  }
</style>

<nav class="sticky top-0 z-30 backdrop-blur-xl md:backdrop-blur-none">
  <div class="relative isolate">
    <div
      class="absolute w-full h-full bg-background blur-2xl z-10 bottom-3/12"
      aria-hidden="true"
    >
    </div>

    <div class="flex items-center justify-between py-2 md:py-4 px-4 md:px-10">
      <a
        href="/"
        class="z-20 group relative md:-left-1.5 text-2xl font-medium text-text"
      >
        <div class="font-extrabold">
          <svg
            viewBox="0 0 220 220"
            xmlns="http://www.w3.org/2000/svg"
            class="hex-logo"
          >
            <polygon
              points="100,30 173.2,70 173.2,150 100,190 26.8,150 26.8,70"
              class="hex fill-none origin-center dark:group-hover:drop-shadow-[0_0_10px_var(--color-primary)] stroke-primary group-hover:scale-105 group-hover:brightness-80 dark:group-hover:brightness-140 duration-200 transition-all"
            ></polygon>

            <text
              x="100"
              y="120"
              class="letter dark:group-hover:drop-shadow-[0_0_10px_var(--color-primary)] dark:group-hover:fill-white fill-primary group-hover:scale-105 group-hover:brightness-80 dark:group-hover:brightness-140 duration-200 transition-all"
              >C</text
            >
          </svg>
        </div>
      </a>

      <!-- Desktop nav -->
      <ul class="z-20 hidden md:flex text-base items-center text-muted">
        {
          sections.map((section) => (
            <li>
              <a
                href={section.link}
                aria-label={`Go to ${section.name} section`}
                class="px-3 py-4 text-muted hover:text-primary transition-colors duration-300"
              >
                {section.name}
              </a>
            </li>
          ))
        }
        <li>
          <a
            href="/keshabChaiResume.pdf"
            target="_blank"
            rel="noopener"
            class="px-3 py-4 text-muted hover:text-primary transition-colors duration-300"
          >
            Resume
          </a>
        </li>
        <li class="flex justify-center items-center w-fit">
          <button
            id="theme-toggle"
            class="theme-toggle pl-3 pr-1.5 hover:text-primary transition cursor-pointer duration-300"
            title="Toggle theme"
          >
            <Icon size={25} name="sun" class="block dark:hidden text-muted" />
            <Icon size={25} name="moon" class="hidden dark:block text-muted" />
          </button>
        </li>
      </ul>

      <button
        id="menu-open"
        class="z-20 md:hidden text-muted text-3xl cursor-pointer focus:outline-none"
        aria-expanded="false"
        aria-controls="mobile-menu"
      >
        <span class="sr-only">Open menu</span>
        <Icon size={35} name="hamburger" />
      </button>
    </div>
  </div>
</nav>

<div
  id="menu-overlay"
  class="fixed z-40 bg-black/20 backdrop-blur-lg duration-200 inset-0 hidden"
>
</div>

<!-- Mobile nav -->
<aside
  id="mobile-menu"
  class="hide-menu bg-background duration-200 fixed right-0 top-0 h-screen overflow-y-auto overflow-x-hidden z-50 flex-col space-y-2 px-4 py-4 w-10/12 shadow-2xl [color-scheme:light] dark:[color-scheme:dark] text-muted md:hidden"
>
  <img
    id="background"
    src={background.src}
    aria-hidden="true"
    fetchpriority="high"
  />

  <ul class="flex flex-col justify-start items-stretch w-full h-full">
    <button
      id="menu-close"
      class="ml-auto flex pl-4 pt-1 justify-end mb-2 text-muted text-3xl cursor-pointer focus:outline-none"
    >
      <span class="sr-only">Close menu</span>
      <Icon size={35} name="close" />
    </button>
    {
      sections.map((section) => (
        <li>
          <a
            href={section.link}
            aria-label={`Go to ${section.name} section`}
            class="menu-close-link active:shadow-[0_0_10px_2px_rgba(0,0,0,0.1)] block text-lg px-3 py-4 text-center rounded hover:bg-surface hover:text-primary transition"
          >
            {section.name}
          </a>
        </li>
      ))
    }

    <li>
      <a
        href="/keshabChaiResume.pdf"
        target="_blank"
        rel="noopener"
        aria-label="View Resume PDF"
        class="menu-close-link active:shadow-[0_0_10px_2px_rgba(0,0,0,0.1)] block text-lg px-3 py-4 text-center rounded hover:bg-surface hover:text-primary transition"
      >
        Resume
      </a>
    </li>

    <li class="flex-1 flex justify-center items-center">
      <button
        id="theme-toggle"
        class="-translate-y-20 theme-toggle active:shadow-[0_0_10px_2px_rgba(0,0,0,0.1)] block text-lg p-4 aspect-square cursor-pointer text-center rounded hover:bg-surface hover:text-primary transition"
        title="Toggle theme"
      >
        <Icon size={25} name="sun" class="block dark:hidden text-muted" />
        <Icon size={25} name="moon" class="hidden dark:block text-muted" />
      </button>
    </li>
  </ul>
</aside>

<script>
  function setupNavigation() {
    const root = document.documentElement;
    const themeToggles = document.querySelectorAll(".theme-toggle");
    const openBtn = document.getElementById("menu-open");
    const closeBtn = document.getElementById("menu-close");
    const overlay = document.getElementById("menu-overlay");
    const menu = document.getElementById("mobile-menu");
    const menuCloseLinks = document.querySelectorAll(".menu-close-link");

    // Apply theme on load
    root.classList.toggle("dark", localStorage.getItem("theme") === "dark");

    themeToggles.forEach((toggle) => {
      toggle.addEventListener("click", () => {
        const isDark = root.classList.toggle("dark");
        localStorage.setItem("theme", isDark ? "dark" : "light");
      });
    });

    const initOverflow = document.body.style.overflow;

    function openMenu() {
      if (menu && overlay && openBtn) {
        menu.classList.add("show-menu");
        menu.classList.remove("hide-menu");
        overlay.classList.remove("hidden");
        openBtn.setAttribute("aria-expanded", "true");
        document.body.style.overflow = "hidden";
      }
    }

    function closeMenu() {
      if (menu && overlay && openBtn) {
        menu.classList.remove("show-menu");
        menu.classList.add("hide-menu");
        overlay.classList.add("hidden");
        openBtn.setAttribute("aria-expanded", "false");
        document.body.style.overflow = initOverflow;
      }
    }

    openBtn?.addEventListener("click", openMenu);
    closeBtn?.addEventListener("click", closeMenu);
    overlay?.addEventListener("click", closeMenu);
    menuCloseLinks.forEach((link) => {
      link.addEventListener("click", closeMenu);
    });
  }

  setupNavigation();
  document.addEventListener("astro:after-swap", setupNavigation);
  document.addEventListener("astro:after-navigation", setupNavigation);
</script>
