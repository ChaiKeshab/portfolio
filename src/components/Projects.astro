---
import { getCollection } from "astro:content";
import ProjectCard from "./ProjectCard.astro";

// const projects = await getCollection("projects");
const otherProjects = await getCollection("otherProjects");
---

<section id="projects" class="py-20">
  <!-- <div class="min-h-screen container mx-auto px-2 md:px-12 lg:px-4">
    <div class="max-w-4xl">
      <h2
        class="flex items-center gap-2 text-2xl md:text-3xl font-bold text-text mb-12"
      >
        <span class="font-mono text-primary">03.</span>
        Some Things I've Built
      </h2>

      <div class="space-y-24">
        {
          projects.map((project, index) => (
            <div
              class={`relative grid gap-4 items-center ${
                index % 2 === 0
                  ? "md:grid-cols-7"
                  : "md:grid-cols-7 md:text-right"
              }`}
            >
              {/* Project Image */}
              <div
                class={`md:col-span-4 ${
                  index % 2 === 0 ? "md:order-1" : "md:order-2"
                }`}
              >
                <div class="relative group">
                  <div class="absolute inset-0 bg-primary/20 group-hover:bg-transparent transition duration-300" />
                  <img
                    src={project.data.image}
                    alt={project.data.title}
                    class="w-full h-full object-cover rounded-lg"
                  />
                </div>
              </div>

              {/* Project Content */}
              <div
                class={`md:col-span-3 ${
                  index % 2 === 0 ? "md:order-2" : "md:order-1"
                }`}
              >
                <div class="space-y-4">
                  <h3 class="text-xl font-semibold text-text">
                    {project.data.title}
                  </h3>
                  <div class="p-6 bg-surface rounded-lg">
                    {/* <p class="text-muted">{project.data.description}</p> */}
                  </div>
                  <div
                    class={`flex gap-2 flex-wrap ${
                      index % 2 === 0 ? "" : "md:justify-end"
                    }`}
                  >
                    {project.data.tags.map((tag) => (
                      <span class="px-3 py-1 text-sm text-primary bg-primary/10 rounded-full">
                        {tag}
                      </span>
                    ))}
                  </div>
                  <div
                    class={`flex gap-4 ${
                      index % 2 === 0 ? "" : "md:justify-end"
                    }`}
                  >
                    {/* <a
                      href={project.data.links.github}
                      target="_blank"
                      rel="noopener noreferrer"
                      class="text-muted hover:text-primary transition-colors"
                    >
                      <span class="sr-only">GitHub</span>
                      <svg
                        xmlns="http://www.w3.org/2000/svg"
                        width="24"
                        height="24"
                        viewBox="0 0 24 24"
                        fill="none"
                        stroke="currentColor"
                        class="w-6 h-6"
                      >
                        <path d="M9 19c-5 1.5-5-2.5-7-3m14 6v-3.87a3.37 3.37 0 0 0-.94-2.61c3.14-.35 6.44-1.54 6.44-7A5.44 5.44 0 0 0 20 4.77 5.07 5.07 0 0 0 19.91 1S18.73.65 16 2.48a13.38 13.38 0 0 0-7 0C6.27.65 5.09 1 5.09 1A5.07 5.07 0 0 0 5 4.77a5.44 5.44 0 0 0-1.5 3.78c0 5.42 3.3 6.61 6.44 7A3.37 3.37 0 0 0 9 18.13V22" />
                      </svg>
                    </a> */}
                    <a
                      href={`/projects/${project.id}`}
                      class="text-muted hover:text-primary transition-colors cursor-pointer"
                    >
                      <span class="sr-only">Live Demo</span>
                      <svg
                        xmlns="http://www.w3.org/2000/svg"
                        width="24"
                        height="24"
                        viewBox="0 0 24 24"
                        fill="none"
                        stroke="currentColor"
                        class="w-6 h-6"
                      >
                        <path d="M18 13v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h6" />
                        <polyline points="15 3 21 3 21 9" />
                        <line x1="10" y1="14" x2="21" y2="3" />
                      </svg>
                    </a>
                  </div>
                </div>
              </div>
            </div>
          ))
        }
      </div>
    </div>
  </div> -->

  <div class="min-h-screen container mx-auto px-2 md:px-12 lg:px-4">
    <div class="">
      <h2
        class="flex items-center gap-2 text-2xl md:text-3xl font-bold text-text mb-12"
      >
        <span class="font-mono text-primary">03.</span>
        Some Things I've Built
      </h2>

      <div class="space-y-3 mb-16">
        <div class="grid grid-cols-[repeat(auto-fill,minmax(300px,1fr))] gap-3">
          {
            otherProjects
              .slice(0, 6)
              .map((project) => (
                <ProjectCard
                  id={project.id}
                  title={project.data.title}
                  desc={project.data.desc}
                  tags={project.data.tags}
                  links={project.data.links}
                />
              ))
          }
        </div>

        {
          otherProjects.length > 6 && (
            <div id="more-projects" class="hidden">
              <div class="grid grid-cols-[repeat(auto-fill,minmax(300px,1fr))] gap-3 ">
                {otherProjects.slice(6).map((project) => (
                  <ProjectCard
                    id={project.id}
                    title={project.data.title}
                    desc={project.data.desc}
                    tags={project.data.tags}
                    links={project.data.links}
                  />
                ))}
              </div>
            </div>
          )
        }

        {
          otherProjects.length > 6 && (
            <div class="text-center mt-12">
              <button
                id="show-more-btn"
                class="px-6 py-3 text-primary border border-primary rounded transition-all duration-200 ease-out hover:scale-105 hover:brightness-140 active:scale-95"
              >
                Show More
              </button>
            </div>
          )
        }
      </div>

      <!-- <div class="mt-20 text-center">
        <h3 class="text-2xl font-bold text-text mb-4">
          Other Noteworthy Projects
        </h3>
        <p class="text-muted mb-8">
          A collection of smaller projects and experiments
        </p>

        <a
          href="/archive"
          class="inline-flex items-center gap-2 text-primary hover:text-accent transition-colors duration-200"
        >
          <span>View the archive</span>
          <svg
            class="w-4 h-4"
            fill="none"
            stroke="currentColor"
            viewBox="0 0 24 24"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M17 8l4 4m0 0l-4 4m4-4H3"></path>
          </svg>
        </a>
      </div> -->
    </div>
  </div>
</section>

<script>
  function toggleViewMore() {
    const showMoreBtn = document.getElementById("show-more-btn");
    const moreProjects = document.getElementById("more-projects");

    if (showMoreBtn && moreProjects) {
      showMoreBtn.addEventListener("click", () => {
        moreProjects.classList.toggle("hidden");
        showMoreBtn.textContent = moreProjects.classList.contains("hidden")
          ? "Show More"
          : "Show Less";
      });
    }
  }

  toggleViewMore();
  document.addEventListener("astro:after-swap", toggleViewMore);
</script>
