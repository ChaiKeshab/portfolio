---
import { getCollection } from "astro:content";

// const projects = [
//   {
//     title: "PDF Generator Component",
//     description:
//       "A modular PDF generation system using react-pdf-renderer, designed to support multilingual templates and dynamic layout rendering in client-facing forms.",
//     tags: ["React", "react-pdf", "Node.js"],
//     links: {
//       github: "https://github.com/ChaiKeshab/Pdf-with-react-pdf-renderer",
//       live: null,
//     },
//     image: "/projects/pdf.webp",
//   },
//   {
//     title: "Ant Design Admin Dashboard",
//     description:
//       "A highly customizable admin panel prototype using Ant Design, focusing on dashboard charts, dark mode UI, and flexible component structure for internal tools.",
//     tags: ["React", "Ant Design", "ECharts", "TailwindCSS"],
//     links: {
//       github: "https://github.com/ChaiKeshab/analytics",
//       live: null,
//     },
//     image: "/projects/admin.webp",
//   },
//   {
//     title: "Multi-Tenant Messaging Platform",
//     description:
//       "Built real-time chat infrastructure using STOMP over WebSocket to enable tenant-based communication in real estate and training applications. Includes offline delivery tracking, context-aware chat history, and bot integration via Gemini AI.",
//     tags: ["React", "WebSocket", "STOMP", "Gemini AI", "Next.js"],
//     links: {
//       github: null,
//       live: null,
//     },
//     image: "/projects/chat.webp",
//   },
//   {
//     title: "AI-Powered Property Explorer",
//     description:
//       "A conceptual real estate platform featuring Gemini AI-assisted search and auto-generated listings. Built for speed, clarity, and user focus, with admin-driven dynamic theming and plug-in architecture for onboarding subdomains.",
//     tags: ["Next.js", "TailwindCSS", "Gemini AI", "TanStack Query"],
//     links: {
//       github: null,
//       live: null,
//     },
//     image: "/projects/real-estate.webp",
//   },
//   {
//     title: "Consultancy Web Presence",
//     description:
//       "Modern consulting firm site designed for trust and conversion â€” clean hero layout, conversion-focused contact flow, and modular sections for services, testimonials, and blogs.",
//     tags: ["Astro", "TailwindCSS", "SEO", "Responsive Design"],
//     links: {
//       github: null,
//       live: null,
//     },
//     image: "/projects/consultancy.webp",
//   },
// ];

const projects = await getCollection("projects");

console.log(projects);
---

<section id="work" class="relative z-10 min-h-screen flex items-center py-20">
  <div class="container mx-auto px-4">
    <div class="max-w-4xl">
      <h2 class="flex items-center gap-2 text-3xl font-bold text-text mb-12">
        <span class="font-mono text-primary">03.</span>
        Some Things I've Built
      </h2>

      <div class="space-y-24">
        {
          projects.map((project, index) => (
            <div
              class={`relative grid gap-4 items-center ${
                index % 2 === 0
                  ? "md:grid-cols-7"
                  : "md:grid-cols-7 md:text-right"
              }`}
            >
              {/* Project Image */}
              <div
                class={`md:col-span-4 ${
                  index % 2 === 0 ? "md:order-1" : "md:order-2"
                }`}
              >
                <div class="relative group">
                  <div class="absolute inset-0 bg-primary/20 group-hover:bg-transparent transition duration-300" />
                  <img
                    src={project.data.image}
                    alt={project.data.title}
                    class="w-full h-full object-cover rounded-lg"
                  />
                </div>
              </div>

              {/* Project Content */}
              <div
                class={`md:col-span-3 ${
                  index % 2 === 0 ? "md:order-2" : "md:order-1"
                }`}
              >
                <div class="space-y-4">
                  <h3 class="text-xl font-semibold text-text">
                    {project.data.title}
                  </h3>
                  <div class="p-6 bg-surface rounded-lg">
                    {/* <p class="text-muted">{project.data.description}</p> */}
                  </div>
                  <div
                    class={`flex gap-2 flex-wrap ${
                      index % 2 === 0 ? "" : "md:justify-end"
                    }`}
                  >
                    {project.data.tags.map((tag) => (
                      <span class="px-3 py-1 text-sm text-primary bg-primary/10 rounded-full">
                        {tag}
                      </span>
                    ))}
                  </div>
                  <div
                    class={`flex gap-4 ${
                      index % 2 === 0 ? "" : "md:justify-end"
                    }`}
                  >
                    {/* <a
                      href={project.data.links.github}
                      target="_blank"
                      rel="noopener noreferrer"
                      class="text-muted hover:text-primary transition-colors"
                    >
                      <span class="sr-only">GitHub</span>
                      <svg
                        xmlns="http://www.w3.org/2000/svg"
                        width="24"
                        height="24"
                        viewBox="0 0 24 24"
                        fill="none"
                        stroke="currentColor"
                        class="w-6 h-6"
                      >
                        <path d="M9 19c-5 1.5-5-2.5-7-3m14 6v-3.87a3.37 3.37 0 0 0-.94-2.61c3.14-.35 6.44-1.54 6.44-7A5.44 5.44 0 0 0 20 4.77 5.07 5.07 0 0 0 19.91 1S18.73.65 16 2.48a13.38 13.38 0 0 0-7 0C6.27.65 5.09 1 5.09 1A5.07 5.07 0 0 0 5 4.77a5.44 5.44 0 0 0-1.5 3.78c0 5.42 3.3 6.61 6.44 7A3.37 3.37 0 0 0 9 18.13V22" />
                      </svg>
                    </a> */}
                    <a
                      href={`/projects/${project.id}`}
                      class="text-muted hover:text-primary transition-colors cursor-pointer"
                    >
                      <span class="sr-only">Live Demo</span>
                      <svg
                        xmlns="http://www.w3.org/2000/svg"
                        width="24"
                        height="24"
                        viewBox="0 0 24 24"
                        fill="none"
                        stroke="currentColor"
                        class="w-6 h-6"
                      >
                        <path d="M18 13v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h6" />
                        <polyline points="15 3 21 3 21 9" />
                        <line x1="10" y1="14" x2="21" y2="3" />
                      </svg>
                    </a>
                  </div>
                </div>
              </div>
            </div>
          ))
        }
      </div>
    </div>
  </div>
</section>
